
@{
    ViewBag.Title = "CesarCipher";
}

<!-- Tutorial 11-Cesar-Vinegere -->
<div class="container">
    <!-- encryption area -->
    <div class="row">
        <div class="col-md-12">
            <h1>Cesar Cipher</h1>
            <p>Nur positive Zahlen eingeben!</p>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <br />
            <legend>Plaintext</legend>
            <textarea id="plaintext" class="form-control"></textarea><br />
            <button class="btn btn-primary" id="analyzePlaintext">Analyze Plaintext</button><br /><br />
            <button class="btn btn-primary" id="encrypt">Encrypt</button> using shift <input name="shift" id="shift" type="text" />
        </div>

        <div class="col-md-6">
            <br />
            <legend>Analyzed Plaintext</legend>
            <div id="chartPlaintext"></div>
        </div>
    </div>

    <!-- decryption area -->
    <div class="row">
        <div class="col-md-12"><br /><br /></div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <br />
            <legend>Ciphertext</legend>
            <textarea id="ciphertext" class="form-control"></textarea><br />
            <button class="btn btn-primary" id="analyzeCiphertext">Analyze Ciphertext</button><br /><br />
            <button class="btn btn-primary" id="decrypt">Decrypt</button> using shift <input name="backshift" id="backshift" type="text" />
        </div>

        <div class="col-md-6">
            <br />
            <legend>Analyzed Ciphertext</legend>
            <div id="chartCiphertext"></div>
        </div>
    </div>
</div>

<script>
    //call analyze function
    document.getElementById("analyzePlaintext").addEventListener("click", function (e) {
        e.preventDefault();
        e.stopPropagation();

        var text = document.getElementById("plaintext").value;
        var histogram = createHistogramValues(text);

        document.getElementById("chartPlaintext").innerHTML = createHTMLTable(histogram);
    });

    //call encrypt function
    document.getElementById("encrypt").addEventListener("click", function (e) {
        e.preventDefault();
        e.stopPropagation();

        var plaintext = document.getElementById("plaintext").value;
        var shift = document.getElementById("shift").value;

        document.getElementById("ciphertext").innerHTML = createAlphabeticalShift(plaintext, shift, false);
    });

    //analyze values
    function createHistogramValues(text)
    {
        var histogram_prepare = [];

        for (var i = 0, len = text.length; i < len; i++){
            var letter = text[i];
            //check if current position is a character
            if (letter.match(/[a-z]/i))
            {
                histogram_prepare[letter] = (histogram_prepare[letter] || 0) + 1;
            }
        }

        histogram = histogram_prepare.sort(function(a, b){
            a = a[1];
            b = b[1];

            return a < b ? -1 : (a > b ? 1 : 0);
        });

        return histogram;
    }

    //fill histogram data in table
    function createHTMLTable(histogram)
    {
        var html = "<table>";
        for (var key in histogram) {
            html += "<tr>";
            html += "<td>" + key + ": </td><td>&nbsp;</td>";
            html += "<td>" + histogram[key] + "</td>";
            html += "</tr>";
        }
        html += "</table>";
        return html;
    }

    //decrypt and encrypt
    function createAlphabeticalShift(text, shift, decrypt) {
        //turn key into negative number for decryption
        if (decrypt == true) {
            shift = shift * (-1);
        }

        shift = parseInt(shift);
        if (shift < 0) shift = 26 + shift;

        var output = '';

        for (var i = 0; i < text.length; i++) {
            var c = text[i];
            var tempchar = "";

            //check if current position is a character
            if (c.match(/[a-z]/i)) {
                var code = text.charCodeAt(i);

                //javascript character codes
                if ((code >= 65) && (code <= 90)){
                    tempchar = String.fromCharCode(((code - 65 + shift) % 26) + 65);
                } 
                //ascii codes
                else if ((code >= 97) && (code <= 122)) {
                    tempchar = String.fromCharCode(((code - 97 + shift) % 26) + 97);
                }
            }
            output += tempchar;
        }
        return output;
    }

    //call analyze function
    document.getElementById("analyzeCiphertext").addEventListener("click", function (e) {
        e.preventDefault();
        e.stopPropagation();

        var text = document.getElementById("ciphertext").value;
        var histogram = createHistogramValues(text);

        document.getElementById("chartCiphertext").innerHTML = createHTMLTable(histogram);
    });

    //call decrypt function
    document.getElementById("decrypt").addEventListener("click", function (e) {
        e.preventDefault();
        e.stopPropagation();

        var ciphertext = document.getElementById("ciphertext").value;
        var shift = document.getElementById("backshift").value;

        document.getElementById("ciphertext").innerHTML = createAlphabeticalShift(ciphertext, shift, true);
    });
</script>
